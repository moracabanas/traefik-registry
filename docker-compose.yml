version: '3.3'

secrets:
  USERS:
    file: ./.secrets/USERS.secret

services: 
  registry:
    image: registry:2.7.1
    networks: 
      - net
      - traefik-public
    environment: 
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      REGISTRY_HTTP_ADDR: :5000
    volumes:
      - data:/var/lib/registry
    secrets:
      - USERS
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - node.role == manager 
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-http.rule=Host(`${DOMAIN?variable not set}`)
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-http.entrypoints=http
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-http.middlewares=https-redirect
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-https.entrypoints=https
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-https.rule=Host(`${DOMAIN?variable not set}`)
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-https.tls=true
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-https.tls.certresolver=le
        - traefik.http.services.${REGISTRY_NAME?variable not set}_registry.loadbalancer.server.port=5000
        - traefik.http.middlewares.${REGISTRY_NAME?variable not set}_registry-auth.basicauth.usersfile=/run/secrets/USERS
        #- traefik.http.routers.${REGISTRY_NAME?variable not set}_registry-https.middlewares=${REGISTRY_NAME?variable not set}_registry-auth
  
  ui:
    image: jc21/registry-ui
    depends_on: 
      - registry
    networks: 
      - net
      - traefik-public
    environment: 
      REGISTRY_HOST: "${DOMAIN?variable not set}"
      REGISTRY_DOMAIN: ${DOMAIN?variable not set}
      #REGISTRY_USER: ${REGISTRY_USER}
      #REGISTRY_PASS: ${REGISTRY_PASS}
      REGISTRY_STORAGE_DELETE_ENABLED: "true"

    secrets:
      - USERS
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - node.role == manager 
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-http.rule=Host(`${DOMAIN_UI?variable not set}`)
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-http.entrypoints=http
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-http.middlewares=https-redirect
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-https.entrypoints=https
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-https.rule=Host(`${DOMAIN_UI?variable not set}`)
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-https.tls=true
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-https.tls.certresolver=le
        - traefik.http.services.${REGISTRY_NAME?variable not set}_ui.loadbalancer.server.port=80
        - traefik.http.middlewares.${REGISTRY_NAME?variable not set}_ui-auth.basicauth.usersfile=/run/secrets/USERS
        - traefik.http.routers.${REGISTRY_NAME?variable not set}_ui-https.middlewares=${REGISTRY_NAME?variable not set}_ui-auth
    
    

networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

volumes: 
  data:
    driver: local